# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-09-05 17:37
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=500, unique=True, verbose_name='number')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('author', models.CharField(blank=True, max_length=50, null=True, verbose_name='Author')),
                ('image', models.ImageField(blank=True, max_length=200, null=True, upload_to='book/%Y/%m', verbose_name='image')),
                ('source', models.IntegerField(blank=True, choices=[(0, 'purchase'), (1, 'borrowed'), (2, 'present')], default=0, null=True, verbose_name='source')),
                ('page', models.SmallIntegerField(blank=True, null=True, verbose_name='page')),
                ('book_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='book number')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='price')),
                ('inventory', models.IntegerField(blank=True, null=True, verbose_name='inventory')),
                ('storage_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='storage time')),
                ('publish_time', models.DateTimeField(blank=True, null=True, verbose_name='publish time')),
                ('publish_house', models.CharField(blank=True, max_length=100, null=True, verbose_name='publish house')),
                ('borrowing_times', models.IntegerField(default=0, verbose_name='borrowing times')),
                ('note', models.CharField(default=True, max_length=2048, null=True, verbose_name='note')),
            ],
            options={
                'ordering': ('number',),
                'db_table': 'book',
                'verbose_name': 'book',
                'verbose_name_plural': 'books',
            },
        ),
        migrations.CreateModel(
            name='BookBorrowInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('standard_return_time', models.DateTimeField(default=datetime.datetime(2016, 9, 8, 17, 37, 15, 540000))),
                ('real_return_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[(0, 'borrow'), (1, 'return'), (2, 'unknown')], default=0, max_length=20)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bookborrowinfo',
                'verbose_name': 'bookborrowinfo',
                'verbose_name_plural': 'bookborrowinfos',
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Book Categories')),
                ('ordering', models.IntegerField(blank=True, null=True, verbose_name='ordering')),
            ],
            options={
                'ordering': ('ordering',),
                'db_table': 'bookcategory',
                'verbose_name': 'Book Category',
                'verbose_name_plural': 'Book Categories',
            },
        ),
        migrations.CreateModel(
            name='LockIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=255)),
                ('lock_time', models.CharField(max_length=255)),
            ],
            options={
                'default_permissions': [],
                'db_table': 'lockip',
            },
        ),
        migrations.CreateModel(
            name='SystemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cur_system_version', models.CharField(blank=True, default='0.1.1.0', max_length=255)),
            ],
            options={
                'ordering': ('-id',),
                'default_permissions': ('view', 'change', 'add', 'delete'),
                'db_table': 'systemstatus',
            },
        ),
        migrations.CreateModel(
            name='UserLoginLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('ip', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('login_time', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-login_time',),
                'default_permissions': [],
                'db_table': 'userloginlogs',
            },
        ),
        migrations.CreateModel(
            name='UserLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=255, verbose_name='IP')),
                ('operation_type', models.IntegerField(blank=True, choices=[(1, 'login/logout'), (2, 'other')], null=True, verbose_name='operation type')),
                ('read', models.BooleanField(default=False, verbose_name='read over')),
                ('time', models.DateTimeField(blank=True, default=django.utils.timezone.now, max_length=255, verbose_name='time')),
                ('description', models.CharField(default='', max_length=500, verbose_name='description')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='username')),
            ],
            options={
                'ordering': ('-time',),
                'default_permissions': ('view', 'change', 'add', 'delete'),
                'db_table': 'userlogs',
                'verbose_name': 'user log',
                'verbose_name_plural': 'user logs',
            },
        ),
        migrations.CreateModel(
            name='WarningLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_ip', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='IP')),
                ('warning_type', models.IntegerField(blank=True, choices=[(0, 'unknown'), (1, 'system exception'), (2, 'network exception')], default=0, verbose_name='warning type')),
                ('serious_level', models.IntegerField(blank=True, choices=[(0, 'unknown'), (1, 'slight'), (2, 'general'), (3, 'serious')], default=0, verbose_name='serious level')),
                ('description', models.CharField(blank=True, default='', max_length=2048, verbose_name='description')),
                ('read_flag', models.BooleanField(default=False, verbose_name='read over')),
                ('happen_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, max_length=255, verbose_name='happened time')),
                ('extra', models.CharField(blank=True, default='', max_length=255, verbose_name='extraneous information')),
            ],
            options={
                'ordering': ('read_flag', '-happen_time'),
                'default_permissions': ('view', 'change', 'add', 'delete'),
                'db_table': 'warninglogs',
                'verbose_name': 'warning log',
                'verbose_name_plural': 'warning logs',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ManyToManyField(help_text='Add the classification of the books ', related_name='user_set', to='firstapp.BookCategory', verbose_name='category'),
        ),
    ]
